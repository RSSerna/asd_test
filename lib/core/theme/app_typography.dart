import 'package:flutter/material.dart';

Typography appMaterialTypography = Typography.material2021(
  black: appMaterialTextLightTheme,
  white: appMaterialTextDarkTheme,
  englishLike: appMaterialEnglishLikeTextTheme,
  dense: appMaterialDensetextTheme,
  tall: appMaterialTallTextTheme,
);

TextTheme appMaterialTextLightTheme = const TextTheme(
  displayLarge: TextStyle(
    debugLabel: 'Black Overpass displayLarge',
    fontFamily: 'Overpass',
    color: Colors.black54,
    decoration: TextDecoration.none,
  ),
  displayMedium: TextStyle(
    debugLabel: 'Black Overpass displayMedium',
    fontFamily: 'Overpass',
    color: Colors.black54,
    decoration: TextDecoration.none,
  ),
  displaySmall: TextStyle(
    debugLabel: 'Black Overpass displaySmall',
    fontFamily: 'Overpass',
    color: Colors.black54,
    decoration: TextDecoration.none,
  ),
  headlineLarge: TextStyle(
    debugLabel: 'Black Overpass headlineLarge',
    fontFamily: 'Overpass',
    color: Colors.black54,
    decoration: TextDecoration.none,
  ),
  headlineMedium: TextStyle(
    debugLabel: 'Black Overpass headlineMedium',
    fontFamily: 'Overpass',
    color: Colors.black54,
    decoration: TextDecoration.none,
  ),
  headlineSmall: TextStyle(
    debugLabel: 'Black Overpass headlineSmall',
    fontFamily: 'Overpass',
    color: Colors.black87,
    decoration: TextDecoration.none,
  ),
  titleLarge: TextStyle(
    debugLabel: 'Black Overpass titleLarge',
    fontFamily: 'Overpass',
    color: Colors.black87,
    decoration: TextDecoration.none,
  ),
  titleMedium: TextStyle(
    debugLabel: 'Black Overpass titleMedium',
    fontFamily: 'Overpass',
    color: Colors.black87,
    decoration: TextDecoration.none,
  ),
  titleSmall: TextStyle(
    debugLabel: 'Black Overpass titleSmall',
    fontFamily: 'Overpass',
    color: Colors.black,
    decoration: TextDecoration.none,
  ),
  bodyLarge: TextStyle(
    debugLabel: 'Black Manrope bodyLarge',
    fontFamily: 'Manrope',
    color: Colors.black87,
    decoration: TextDecoration.none,
  ),
  bodyMedium: TextStyle(
    debugLabel: 'Black Manrope bodyMedium',
    fontFamily: 'Manrope',
    color: Colors.black87,
    decoration: TextDecoration.none,
  ),
  bodySmall: TextStyle(
    debugLabel: 'Black Manrope bodySmall',
    fontFamily: 'Manrope',
    color: Colors.black54,
    decoration: TextDecoration.none,
  ),
  labelLarge: TextStyle(
    debugLabel: 'Black Manrope labelLarge',
    fontFamily: 'Manrope',
    color: Colors.black87,
    decoration: TextDecoration.none,
  ),
  labelMedium: TextStyle(
    debugLabel: 'Black Manrope labelMedium',
    fontFamily: 'Manrope',
    color: Colors.black,
    decoration: TextDecoration.none,
  ),
  labelSmall: TextStyle(
    debugLabel: 'Black Manrope labelSmall',
    fontFamily: 'Manrope',
    color: Colors.black,
    decoration: TextDecoration.none,
  ),
);

TextTheme appMaterialTextDarkTheme = const TextTheme(
  displayLarge: TextStyle(
    debugLabel: 'Black Overpass displayLarge',
    fontFamily: 'Overpass',
    color: Colors.white70,
    decoration: TextDecoration.none,
  ),
  displayMedium: TextStyle(
    debugLabel: 'Black Overpass displayMedium',
    fontFamily: 'Overpass',
    color: Colors.white70,
    decoration: TextDecoration.none,
  ),
  displaySmall: TextStyle(
    debugLabel: 'Black Overpass displaySmall',
    fontFamily: 'Overpass',
    color: Colors.white70,
    decoration: TextDecoration.none,
  ),
  headlineLarge: TextStyle(
    debugLabel: 'Black Overpass headlineLarge',
    fontFamily: 'Overpass',
    color: Colors.white70,
    decoration: TextDecoration.none,
  ),
  headlineMedium: TextStyle(
    debugLabel: 'Black Overpass headlineMedium',
    fontFamily: 'Overpass',
    color: Colors.white70,
    decoration: TextDecoration.none,
  ),
  headlineSmall: TextStyle(
    debugLabel: 'Black Overpass headlineSmall',
    fontFamily: 'Overpass',
    color: Colors.white,
    decoration: TextDecoration.none,
  ),
  titleLarge: TextStyle(
    debugLabel: 'Black Overpass titleLarge',
    fontFamily: 'Overpass',
    color: Colors.white,
    decoration: TextDecoration.none,
  ),
  titleMedium: TextStyle(
    debugLabel: 'Black Overpass titleMedium',
    fontFamily: 'Overpass',
    color: Colors.white,
    decoration: TextDecoration.none,
  ),
  titleSmall: TextStyle(
    debugLabel: 'Black Overpass titleSmall',
    fontFamily: 'Overpass',
    color: Colors.white,
    decoration: TextDecoration.none,
  ),
  bodyLarge: TextStyle(
    debugLabel: 'Black Manrope bodyLarge',
    fontFamily: 'Manrope',
    color: Colors.white,
    decoration: TextDecoration.none,
  ),
  bodyMedium: TextStyle(
    debugLabel: 'Black Manrope bodyMedium',
    fontFamily: 'Manrope',
    color: Colors.white,
    decoration: TextDecoration.none,
  ),
  bodySmall: TextStyle(
    debugLabel: 'Black Manrope bodySmall',
    fontFamily: 'Manrope',
    color: Colors.white70,
    decoration: TextDecoration.none,
  ),
  labelLarge: TextStyle(
    debugLabel: 'Black Manrope labelLarge',
    fontFamily: 'Manrope',
    color: Colors.white,
    decoration: TextDecoration.none,
  ),
  labelMedium: TextStyle(
    debugLabel: 'Black Manrope labelMedium',
    fontFamily: 'Manrope',
    color: Colors.white,
    decoration: TextDecoration.none,
  ),
  labelSmall: TextStyle(
    debugLabel: 'Black Manrope labelSmall',
    fontFamily: 'Manrope',
    color: Colors.white,
    decoration: TextDecoration.none,
  ),
);

TextTheme appMaterialEnglishLikeTextTheme = const TextTheme(
  displayLarge: TextStyle(
    debugLabel: 'englishLike displayLarge ',
    fontSize: 96,
    fontWeight: FontWeight.w300,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: -1.5,
  ),
  displayMedium: TextStyle(
    debugLabel: 'englishLike displayMedium',
    fontSize: 60,
    fontWeight: FontWeight.w300,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: -0.5,
  ),
  displaySmall: TextStyle(
    debugLabel: 'englishLike displaySmall',
    fontSize: 48,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0,
  ),
  headlineLarge: TextStyle(
    debugLabel: 'englishLike headlineLarge',
    fontSize: 40,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0.25,
  ),
  headlineMedium: TextStyle(
    debugLabel: 'englishLike headlineMedium',
    fontSize: 36,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0.25,
  ),
  headlineSmall: TextStyle(
    debugLabel: 'englishLike headlineSmall',
    fontSize: 24,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0,
  ),
  titleLarge: TextStyle(
    debugLabel: 'englishLike titleLarge',
    fontSize: 20,
    fontWeight: FontWeight.w500,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0.15,
  ),
  titleMedium: TextStyle(
    debugLabel: 'englishLike titleMedium',
    fontSize: 16,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0.15,
  ),
  titleSmall: TextStyle(
    debugLabel: 'englishLike titleSmall',
    fontSize: 14,
    fontWeight: FontWeight.w500,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0.1,
  ),
  bodyLarge: TextStyle(
    debugLabel: 'englishLike bodyLarge',
    fontSize: 16,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0.5,
  ),
  bodyMedium: TextStyle(
    debugLabel: 'englishLike bodyMedium',
    fontSize: 14,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0.25,
  ),
  bodySmall: TextStyle(
    debugLabel: 'englishLike bodySmall',
    fontSize: 12,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 0.4,
  ),
  labelLarge: TextStyle(
    debugLabel: 'englishLike labelLarge',
    fontSize: 14,
    fontWeight: FontWeight.w500,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 1.25,
  ),
  labelMedium: TextStyle(
    debugLabel: 'englishLike labelMedium',
    fontSize: 11,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 1.5,
  ),
  labelSmall: TextStyle(
    debugLabel: 'englishLike labelSmall',
    fontSize: 10,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
    letterSpacing: 1.5,
  ),
);

TextTheme appMaterialDensetextTheme = const TextTheme(
  displayLarge: TextStyle(
    debugLabel: 'dense displayLarge',
    inherit: false,
    fontSize: 112,
    fontWeight: FontWeight.w100,
    textBaseline: TextBaseline.ideographic,
  ),
  displayMedium: TextStyle(
    debugLabel: 'dense displayMedium',
    inherit: false,
    fontSize: 56,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  displaySmall: TextStyle(
    debugLabel: 'dense displaySmall',
    inherit: false,
    fontSize: 45,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  headlineLarge: TextStyle(
    debugLabel: 'dense headlineLarge',
    inherit: false,
    fontSize: 40,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  headlineMedium: TextStyle(
    debugLabel: 'dense headlineMedium',
    inherit: false,
    fontSize: 36,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  headlineSmall: TextStyle(
    debugLabel: 'dense headlineSmall',
    inherit: false,
    fontSize: 24,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  titleLarge: TextStyle(
    debugLabel: 'dense titleLarge',
    inherit: false,
    fontSize: 21,
    fontWeight: FontWeight.w500,
    textBaseline: TextBaseline.ideographic,
  ),
  titleMedium: TextStyle(
    debugLabel: 'dense titleMedium',
    inherit: false,
    fontSize: 17,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  titleSmall: TextStyle(
    debugLabel: 'dense titleSmall',
    inherit: false,
    fontSize: 15,
    fontWeight: FontWeight.w500,
    textBaseline: TextBaseline.ideographic,
  ),
  bodyLarge: TextStyle(
    debugLabel: 'dense bodyLarge',
    inherit: false,
    fontSize: 15,
    fontWeight: FontWeight.w500,
    textBaseline: TextBaseline.ideographic,
  ),
  bodyMedium: TextStyle(
    debugLabel: 'dense bodyMedium',
    inherit: false,
    fontSize: 15,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  bodySmall: TextStyle(
    debugLabel: 'dense bodySmall',
    inherit: false,
    fontSize: 13,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  labelLarge: TextStyle(
    debugLabel: 'dense labelLarge',
    inherit: false,
    fontSize: 15,
    fontWeight: FontWeight.w500,
    textBaseline: TextBaseline.ideographic,
  ),
  labelMedium: TextStyle(
    debugLabel: 'dense labelMedium',
    inherit: false,
    fontSize: 12,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  labelSmall: TextStyle(
    debugLabel: 'dense labelSmall',
    inherit: false,
    fontSize: 11,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
);

TextTheme appMaterialTallTextTheme = const TextTheme(
  displayLarge: TextStyle(
    debugLabel: 'tall displayLarge',
    inherit: false,
    fontSize: 112,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.alphabetic,
  ),
  displayMedium: TextStyle(
    debugLabel: 'tall displayMedium',
    inherit: false,
    fontSize: 56,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  displaySmall: TextStyle(
    debugLabel: 'tall displaySmall',
    inherit: false,
    fontSize: 45,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  headlineLarge: TextStyle(
    debugLabel: 'tall headlineLarge',
    inherit: false,
    fontSize: 40,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  headlineMedium: TextStyle(
    debugLabel: 'tall headlineMedium',
    inherit: false,
    fontSize: 36,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  headlineSmall: TextStyle(
    debugLabel: 'tall headlineSmall',
    inherit: false,
    fontSize: 24,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  titleLarge: TextStyle(
    debugLabel: 'tall titleLarge',
    inherit: false,
    fontSize: 24,
    fontWeight: FontWeight.w700,
    textBaseline: TextBaseline.ideographic,
  ),
  titleMedium: TextStyle(
    debugLabel: 'tall titleMedium',
    inherit: false,
    fontSize: 21,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  titleSmall: TextStyle(
    debugLabel: 'tall titleSmall',
    inherit: false,
    fontSize: 17,
    fontWeight: FontWeight.w500,
    textBaseline: TextBaseline.ideographic,
  ),
  bodyLarge: TextStyle(
    debugLabel: 'tall bodyLarge',
    inherit: false,
    fontSize: 15,
    fontWeight: FontWeight.w700,
    textBaseline: TextBaseline.ideographic,
  ),
  bodyMedium: TextStyle(
    debugLabel: 'tall bodyMedium',
    inherit: false,
    fontSize: 15,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  bodySmall: TextStyle(
    debugLabel: 'tall bodySmall',
    inherit: false,
    fontSize: 13,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  labelLarge: TextStyle(
    debugLabel: 'tall labelLarge',
    inherit: false,
    fontSize: 15,
    fontWeight: FontWeight.w700,
    textBaseline: TextBaseline.ideographic,
  ),
  labelMedium: TextStyle(
    debugLabel: 'tall labelMedium',
    inherit: false,
    fontSize: 12,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
  labelSmall: TextStyle(
    debugLabel: 'tall labelSmall',
    inherit: false,
    fontSize: 11,
    fontWeight: FontWeight.w400,
    textBaseline: TextBaseline.ideographic,
  ),
);
